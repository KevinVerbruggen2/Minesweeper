<UserControl x:Class="View.Screens.MineSweeperScreen"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:converters="clr-namespace:View.Converters"
             xmlns:mineSweeper="clr-namespace:Model.MineSweeper;assembly=Model"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <!-- Resource for converting SquareStatus to Ellipse fill -->
        <converters:SquareStatusConverter x:Key="squareStatusToEllipseFill"
                                          Uncovered="lightgreen"
                                          Covered="transparant">
            <converters:SquareStatusConverter.Flagged>
                <ImageBrush ImageSource="/flag.png" />
            </converters:SquareStatusConverter.Flagged>
            <converters:SquareStatusConverter.Mine>
                <ImageBrush ImageSource="/bomb.jpg" />
            </converters:SquareStatusConverter.Mine>
        </converters:SquareStatusConverter>
        
        <!-- Resource for converting SquareStatus to Mine status when game is lost and the square is a mine -->
        <converters:SquareStatusGameLostBombs x:Key="LostGameBombStatus">
            <converters:SquareStatusGameLostBombs.Mine>
                <ImageBrush ImageSource="/bomb.jpg" />
            </converters:SquareStatusGameLostBombs.Mine>
        </converters:SquareStatusGameLostBombs>
    
        <!-- Resource for converting SquareStatus to TextBlock visibility for neighBoringCount -->
        <converters:SquareStatusTextVisibility x:Key="squareNeighborCountVisibility"></converters:SquareStatusTextVisibility>
        
        <!-- Resource for converting SquareStatus to TextBlock color for neighBoringCount-->
        <converters:NeighboringMinesColorConverter x:Key="neighboringMinesColorConverter" />
        
        <!-- Resource for converting GameStatus to string -->
        <converters:GameStatusConverter x:Key="gameStatusString" Won="You Won!" Lost="You Lost!" InProgress="Game in progress!"/>
        
        <!-- Resource for TimeElapsedTextBlock style -->
        <Style TargetType="TextBlock" x:Key="TimeElapsedTextStyle" />
        
    </UserControl.Resources>
    <Grid>
        <!-- Title text -->
        <TextBlock VerticalAlignment="Top" HorizontalAlignment="Center" FontSize="20" Text="MineSweeper"></TextBlock>
        
        <!-- Game status text -->
        <TextBlock VerticalAlignment="Top" HorizontalAlignment="Center" Margin="0,30,80,5" FontSize="18" Text="{Binding GameViewModel.currentGame.Value.Status, Converter={StaticResource gameStatusString}}"></TextBlock>
        
        <!-- Time elapsed text -->
        <TextBlock VerticalAlignment="Top" HorizontalAlignment="Center" Margin="150,30,0,5" FontSize="18" x:Name="TimeElapsedTextBlock" Text="00:00:00" Style="{StaticResource TimeElapsedTextStyle}" />
        
        <!-- Button to get a hint -->
        <Button VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="0,0,0,5" Width="135" Height="25" Content="Start New Game" Command="{Binding StartNewGameCommand}" />
        
        <!-- Button to get a hint -->
        <Button VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="305,0,0,5" Width="135" Height="25" Content="Go To Setting Screen" Command="{Binding SwitchToSettingScreen}" />
        
        <!-- Button to get a hint -->
        <Button VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="0,0,305,5" Width="135" Height="25" Content="Get Hint" Command="{Binding GetHint}" />
        
        <!-- Viewbox for scaling the game board -->
        <Viewbox Stretch="Uniform" Margin="0, 70, 0, 50">
            <!-- ItemsControl for displaying rows of squares -->
            <ItemsControl VerticalAlignment="Center" HorizontalAlignment="Center" ItemsSource="{Binding GameViewModel.Board.Rows}">
            <ItemsControl.ItemTemplate>
                <!-- DataTemplate for displaying individual squares -->
                <DataTemplate>
                    <ItemsControl ItemsSource="{Binding Squares}">
                        <ItemsControl.ItemsPanel>
                            <!-- Panel template for arranging squares horizontally -->
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <!-- DataTemplate for individual square buttons -->
                            <DataTemplate>
                                <Button Command="{Binding Uncover}" Width="32" Height="32">
                                    <Button.InputBindings>
                                        <!-- MouseBinding for right-click to toggle flag -->
                                        <MouseBinding MouseAction="RightClick" Command="{Binding ToggleFlag}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}" />
                                    </Button.InputBindings>
                                    <Button.Template>
                                        <!-- ControlTemplate for customizing the appearance of the button -->
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border
                                                Name="border"
                                                Background="LightGray"
                                                BorderBrush="Gray"
                                                BorderThickness="1">
                                                <ContentPresenter />
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <!-- Trigger to change the border color on mouse over -->
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter TargetName="border" Property="BorderBrush" Value="BlueViolet"/>
                                                </Trigger>
                                                <!-- DataTrigger to change the border color when the square is a mine -->
                                                <DataTrigger Binding="{Binding Square.Value.Status}" Value="{x:Static mineSweeper:SquareStatus.Mine}">
                                                    <Setter TargetName="border" Property="BorderBrush" Value="Black" />
                                                </DataTrigger>
                                                    
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>

                                    </Button.Template>
                                    <Button.Content>
                                        <Grid>
                                            <!-- Rectangle to display the lost bombs when the game is over -->
                                            <Rectangle Width="25" Height="25" Fill="{Binding IsGameOverAndMine.Value, Converter={StaticResource LostGameBombStatus}}"  />
                                            <!-- Rectangle to display the square status -->
                                            <Rectangle Fill="{Binding Square.Value.Status, Converter={StaticResource squareStatusToEllipseFill}}"  />
                                            <TextBlock
                                                Text="{Binding Square.Value.NeighboringMineCount}"
                                                Visibility="{Binding Square.Value, Converter={StaticResource squareNeighborCountVisibility}}"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center">
                                            </TextBlock>
                                        </Grid>
                                        
                                    </Button.Content>
                                    
                                    <Button.Style>
                                        <!-- Style for customizing the foreground color of the button text -->
                                        <Style TargetType="Button">
                                            <Setter Property="Foreground" Value="{Binding Square.Value.NeighboringMineCount, Converter={StaticResource neighboringMinesColorConverter}}" />
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </DataTemplate>
                            
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
        </Viewbox>
    </Grid>
    
</UserControl>
